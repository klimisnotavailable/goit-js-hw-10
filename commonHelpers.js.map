{"version":3,"file":"commonHelpers.js","sources":["../src/js/1-timer.js"],"sourcesContent":["\"use strict\"\n\nconst dateInput = document.querySelector(\"#datetime-picker\")\nconst startButton = document.querySelector(\"button[data-start]\")\nconst daysValue = document.querySelector(\"span[data-days]\")\nconst hoursValue = document.querySelector(\"span[data-hours]\")\nconst minutesValue = document.querySelector(\"span[data-minutes]\")\nconst secondsValue = document.querySelector(\"span[data-seconds]\")\n\nimport flatpickr from \"flatpickr\";\n\nimport \"flatpickr/dist/flatpickr.min.css\";\n\nimport iziToast from \"izitoast\";\n\nimport \"izitoast/dist/css/iziToast.min.css\";\n\nlet userDate;\nconst startTime = Date.now()\n\nconst options = {\n  enableTime: true,\n  time_24hr: true,\n  defaultDate: new Date(),\n  minuteIncrement: 1,\n    onClose(selectedDates,date) {\n\n        startButton.setAttribute(\"disabled\", \"disabled\")\n\n        if (selectedDates[0] <= Date.now()) {\n\n            iziToast.show({\n            message:'Please choose a date in the future'\n            })\n            startButton.setAttribute(\"disabled\", \"disabled\")\n\n        } else if (selectedDates[0] > Date.now()) {\n            \n            startButton.removeAttribute(\"disabled\")\n            userDate = new Date(date)\n            \n        }\n  },\n};\n\nflatpickr(dateInput, options)\n\nfunction convertMs(ms) {\n  // Number of milliseconds per unit of time\n  const second = 1000;\n  const minute = second * 60;\n  const hour = minute * 60;\n  const day = hour * 24;\n\n  // Remaining days\n  const days = Math.floor(ms / day);\n  // Remaining hours\n  const hours = Math.floor((ms % day) / hour);\n  // Remaining minutes\n  const minutes = Math.floor(((ms % day) % hour) / minute);\n  // Remaining seconds\n  const seconds = Math.floor((((ms % day) % hour) % minute) / second);\n\n  return { days, hours, minutes, seconds };\n}\n\nstartButton.addEventListener(\"click\", (event) => {\n    startButton.setAttribute(\"disabled\", \"disabled\")\n    dateInput.setAttribute(\"disbled\", \"disabled\")\n\n    setInterval(() => {\n        const { days, hours, minutes, seconds } = convertMs(userDate - Date.now());\n        daysValue.textContent = String(days).padStart(2, '0')\n        hoursValue.textContent = String(hours).padStart(2, \"0\")\n        minutesValue.textContent = String(minutes).padStart(2,\"0\")\n        secondsValue.textContent = String(seconds).padStart(2, '0')\n        \n    }, 1000)\n})\n\n"],"names":["dateInput","startButton","daysValue","hoursValue","minutesValue","secondsValue","userDate","options","selectedDates","date","iziToast","flatpickr","convertMs","ms","days","hours","minutes","seconds","event"],"mappings":"2GAEA,MAAMA,EAAY,SAAS,cAAc,kBAAkB,EACrDC,EAAc,SAAS,cAAc,oBAAoB,EACzDC,EAAY,SAAS,cAAc,iBAAiB,EACpDC,EAAa,SAAS,cAAc,kBAAkB,EACtDC,EAAe,SAAS,cAAc,oBAAoB,EAC1DC,EAAe,SAAS,cAAc,oBAAoB,EAUhE,IAAIC,EAGJ,MAAMC,EAAU,CACd,WAAY,GACZ,UAAW,GACX,YAAa,IAAI,KACjB,gBAAiB,EACf,QAAQC,EAAcC,EAAM,CAExBR,EAAY,aAAa,WAAY,UAAU,EAE3CO,EAAc,CAAC,GAAK,KAAK,IAAG,GAE5BE,EAAS,KAAK,CACd,QAAQ,oCACpB,CAAa,EACDT,EAAY,aAAa,WAAY,UAAU,GAExCO,EAAc,CAAC,EAAI,KAAK,IAAG,IAElCP,EAAY,gBAAgB,UAAU,EACtCK,EAAW,IAAI,KAAKG,CAAI,EAGjC,CACH,EAEAE,EAAUX,EAAWO,CAAO,EAE5B,SAASK,EAAUC,EAAI,CAQrB,MAAMC,EAAO,KAAK,MAAMD,EAAK,KAAG,EAE1BE,EAAQ,KAAK,MAAOF,EAAK,MAAO,IAAI,EAEpCG,EAAU,KAAK,MAAQH,EAAK,MAAO,KAAQ,GAAM,EAEjDI,EAAU,KAAK,MAASJ,EAAK,MAAO,KAAQ,IAAU,GAAM,EAElE,MAAO,CAAE,KAAAC,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,CAAO,CACxC,CAEAhB,EAAY,iBAAiB,QAAUiB,GAAU,CAC7CjB,EAAY,aAAa,WAAY,UAAU,EAC/CD,EAAU,aAAa,UAAW,UAAU,EAE5C,YAAY,IAAM,CACd,KAAM,CAAE,KAAAc,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,CAAO,EAAKL,EAAUN,EAAW,KAAK,IAAG,CAAE,EACzEJ,EAAU,YAAc,OAAOY,CAAI,EAAE,SAAS,EAAG,GAAG,EACpDX,EAAW,YAAc,OAAOY,CAAK,EAAE,SAAS,EAAG,GAAG,EACtDX,EAAa,YAAc,OAAOY,CAAO,EAAE,SAAS,EAAE,GAAG,EACzDX,EAAa,YAAc,OAAOY,CAAO,EAAE,SAAS,EAAG,GAAG,CAE7D,EAAE,GAAI,CACX,CAAC"}